FROM nvcr.io/nvidia/tritonserver:20.03.1-py3-clientsdk

# CUDA 10.1

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get install -y \
    cmake wget sudo protobuf-compiler \
    libprotobuf-dev python3-pip curl vim zip

# create a non-root user
ARG USER_ID=1000
RUN useradd -m --no-log-init --system  --uid ${USER_ID} appuser -g sudo
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER appuser
WORKDIR /home/appuser

ENV PATH="/home/appuser/.local/bin:${PATH}"
RUN wget https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py --user && \
    rm get-pip.py

# install Python dependencies
RUN pip3 install --user torch==1.5.0+cu101 torchvision==0.6.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html
RUN pip3 install --user onnx==1.7.0 onnxruntime==1.4.0

# Install opencv
RUN pip3 install --user opencv-python==4.1.2.30 && pip3 install --user opencv-python-headless==4.1.2.30 
# RUN sudo apt-get update -y && sudo apt-get install -y libgl1-mesa-dev libglib2.0-0

# Upgrade Cmake version
RUN wget http://www.cmake.org/files/v3.13/cmake-3.13.0.tar.gz \
&& tar xpvf cmake-3.13.0.tar.gz cmake-3.13.0/ && rm cmake-3.13.0.tar.gz && cd cmake-3.13.0 \
&& ./configure && make -j8
RUN echo 'export PATH=/home/appuser/cmake-3.13.0/bin/:$PATH' >> ~/.bashrc && /bin/bash -c "source ~/.bashrc"

#### nvidia 
# # Install Cmake
# RUN cd /tmp && \
#     wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4-Linux-x86_64.sh && \
#     chmod +x cmake-3.14.4-Linux-x86_64.sh && \
#     ./cmake-3.14.4-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license && \
#     rm ./cmake-3.14.4-Linux-x86_64.sh

#### Install TRT
# WORKDIR /home/appuser
# RUN sudo apt-get install -y software-properties-common
# RUN sudo add-apt-repository ppa:ubuntu-toolchain-r/test
# RUN sudo apt-get update && sudo apt-get install -y --no-install-recommends \
#     libcurl4-openssl-dev pkg-config ssh libssl-dev pbzip2 pv bzip2 unzip \
#     devscripts lintian fakeroot dh-make build-essential
# RUN pip3 install --user pycuda==2019.1.2 pytest tensorflow-gpu==1.15

# WORKDIR /usr/local/bin
# RUN sudo wget https://ngc.nvidia.com/downloads/ngccli_cat_linux.zip 
# RUN sudo unzip ngccli_cat_linux.zip 
# RUN sudo chmod u+x ngc && sudo rm ngccli_cat_linux.zip ngc.md5 && sudo echo "no-apikey\nascii\n" | ngc config set
