
--- Succeeded on 20.03 --- 
trtexec --onnx=model.onnx --saveEngine=model.trt --workspace=3072 --explicitBatch 
trtexec --onnx=model.onnx --saveEngine=model.trt --workspace=3072 --explicitBatch --fp16

Command:

docker run --runtime nvidia \                                                       
    --rm --shm-size=1g \
    --ulimit memlock=-1 \
    --ulimit stack=67108864 \
    -p 8000:8000 -p 8001:8001 -p 8002:8002 \
    --name trt_serving7 \
    -v $PWD/model_repository:/models \
    nvcr.io/nvidia/tritonserver:20.03.1-py3 \
    tritonserver --model-store=/models


--- Onnx2trt ---
cmake .. -DTENSORRT_ROOT=/usr/lib/x86_64-linux-gnu -DGPU_ARCHS="70"


--- Build dockerfile ---

cd docker
docker build --build-arg USER_ID=$UID -t chiehpower/trtis:trt-7 . 
docker run --runtime nvidia -dit \
	--env="DISPLAY" \
	--name=trt_client7 chiehpower/trtis:trt-7 
docker start trt_client7 && docker exec -ti trt_client7 /bin/bash

---

cd docker
docker build -t chiehpower/trtis:trt-7 . 
docker run --runtime nvidia -dit \
	--env="DISPLAY" \
	--name=trt_client7 chiehpower/trtis:trt-7
docker start trt_client7 && docker exec -ti trt_client7 /bin/zsh


--- Client ---



$ docker run --runtime nvidia \
    -d --name trt_client7 \
    -v $PWD:/workspace \
    -ti nvcr.io/nvidia/tritonserver:20.03.1-py3-clientsdk 

$ docker start trt_client7
$ docker exec -ti trt_client7 /bin/bash


CUDA : `10.2`

Default python packages version:


certifi (2020.4.5.1)
future (0.18.2)
gevent (20.5.1)
geventhttpclient (1.4.2)
greenlet (0.4.15)
grpcio (1.29.0)
grpcio-tools (1.28.1)
numpy (1.18.4)
Pillow (7.1.2)
pip (9.0.1)
protobuf (3.12.1)
pygobject (3.26.1)
python-apt (1.6.5+ubuntu0.2)
python-rapidjson (0.9.1)
setuptools (46.4.0)
six (1.15.0)
tensorrtserver (1.13.0)
tritonclientutils (1.13.0)
tritongrpcclient (1.13.0)
tritonhttpclient (1.13.0)
wheel (0.34.2)
zope.event (4.4)
zope.interface (5.1.0)


--- Upgrade Cmake ---
# ### Upgrade Cmake version
# RUN wget http://www.cmake.org/files/v3.13/cmake-3.13.0.tar.gz \
# && tar xpvf cmake-3.13.0.tar.gz cmake-3.13.0/ && rm cmake-3.13.0.tar.gz && cd cmake-3.13.0 \
# && ./configure && make -j8
# RUN echo 'export PATH=/workspace/cmake-3.13.0/bin/:$PATH' >> ~/.bashrc && /bin/bash -c "source ~/.bashrc"

#### nvidia 
# # Install Cmake
# RUN cd /tmp && \
#     wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4-Linux-x86_64.sh && \
#     chmod +x cmake-3.14.4-Linux-x86_64.sh && \
#     ./cmake-3.14.4-Linux-x86_64.sh --prefix=/usr/local --exclude-subdir --skip-license && \
#     rm ./cmake-3.14.4-Linux-x86_64.sh
